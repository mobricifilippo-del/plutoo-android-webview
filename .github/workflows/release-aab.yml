name: Android Release (AAB) — generate & sign on runner

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      # userai tre secrets già presenti (scegli tu i valori):
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      KEYSTORE_PATH: ${{ runner.temp }}/plutoo-release.jks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Install Gradle 8.7 (no wrapper)
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7

      # 1) Genera una NUOVA keystore sul runner (sicura: l'app non è pubblicata)
      - name: Generate release keystore
        shell: bash
        run: |
          keytool -genkeypair -v \
            -keystore "$KEYSTORE_PATH" \
            -alias "$KEY_ALIAS" \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass "$KEYSTORE_PASSWORD" \
            -keypass "$KEY_PASSWORD" \
            -dname "CN=Plutoo,O=Plutoo,C=IT"
          # Esporta il certificato (per Play App Signing come upload key)
          keytool -export -rfc \
            -alias "$KEY_ALIAS" \
            -keystore "$KEYSTORE_PATH" \
            -storepass "$KEYSTORE_PASSWORD" \
            -file upload_cert.pem
          ls -l "$KEYSTORE_PATH" upload_cert.pem

      # 2) Build + firma AAB usando la keystore generata
      - name: Build bundleRelease (signed by Gradle)
        shell: bash
        run: |
          gradle clean :app:bundleRelease --stacktrace \
            -Pandroid.injected.signing.store.file="$KEYSTORE_PATH" \
            -Pandroid.injected.signing.store.password="$KEYSTORE_PASSWORD" \
            -Pandroid.injected.signing.key.alias="$KEY_ALIAS" \
            -Pandroid.injected.signing.key.password="$KEY_PASSWORD"

      # 3) Carica gli artifact: AAB firmato + keystore + certificato
      - name: Upload signed AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release.aab
          path: app/build/outputs/bundle/release/*.aab

      - name: Upload keystore (save it safely)
        uses: actions/upload-artifact@v4
        with:
          name: plutoo-release.jks
          path: ${{ env.KEYSTORE_PATH }}

      - name: Upload upload certificate (PEM)
        uses: actions/upload-artifact@v4
        with:
          name: upload_cert.pem
          path: upload_cert.pem
