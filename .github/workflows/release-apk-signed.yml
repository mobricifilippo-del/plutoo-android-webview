name: Android Release APK â€” build & sign (GitHub Actions only)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # ---- Android SDK: installazione manuale stabile ----
      - name: Set up Android SDK (manual install)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget unzip
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          unzip -q cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --licenses
          yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --install "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # ---- Keystore dai secret ----
      - name: Recreate keystore from base64
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > keystore.jks
          ls -l keystore.jks

      # ---- Build APK non firmato (release) ----
      - name: Assemble release (unsigned)
        run: ./gradlew assembleRelease --stacktrace

      # Percorso tipico: app/build/outputs/apk/release/app-release-unsigned.apk
      # Se il tuo modulo non si chiama "app", cambia APP_DIR sotto.
      - name: Find unsigned APK
        id: find_apk
        run: |
          APP_DIR="app"
          APK_PATH=$(ls -1 ${APP_DIR}/build/outputs/apk/release/*-release-unsigned.apk | head -n 1)
          if [ -z "$APK_PATH" ]; then
            echo "Unsigned APK non trovato. Lista:"
            find ${APP_DIR}/build/outputs -type f -name "*.apk" -print
            exit 1
          fi
          echo "apk=$APK_PATH" >> $GITHUB_OUTPUT

      # ---- zipalign + firma con apksigner ----
      - name: Zipalign & Sign APK
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: |
          UNSIGNED="${{ steps.find_apk.outputs.apk }}"
          ALIGNED="app-release-aligned.apk"
          SIGNED="Plutoo-release-signed.apk"

          $ANDROID_HOME/build-tools/34.0.0/zipalign -v -p 4 "$UNSIGNED" "$ALIGNED"

          $ANDROID_HOME/build-tools/34.0.0/apksigner sign \
            --ks keystore.jks \
            --ks-key-alias "$KEY_ALIAS" \
            --ks-pass pass:"$KEYSTORE_PASSWORD" \
            --key-pass pass:"$KEY_PASSWORD" \
            --out "$SIGNED" \
            "$ALIGNED"

          # Verifica firma
          $ANDROID_HOME/build-tools/34.0.0/apksigner verify --print-certs "$SIGNED"
          echo "SIGNED_APK=$SIGNED" >> $GITHUB_ENV

      # ---- Pubblica l'APK firmato come artifact scaricabile ----
      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: Plutoo-APK-signed
          path: ${{ env.SIGNED_APK }}
          if-no-files-found: error
