name: Android Release APK â€” build & sign (stable)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # FIX definitivo: installa SDK e Build Tools manualmente e con percorsi corretti
      - name: Install Android SDK and Build Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget unzip
          mkdir -p $HOME/android-sdk
          cd $HOME/android-sdk
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/ || true
          yes | cmdline-tools/latest/bin/sdkmanager --licenses
          yes | cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34"
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/build-tools/34.0.0" >> $GITHUB_PATH

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Assemble release (unsigned)
        run: ./gradlew :app:assembleRelease --stacktrace

      - name: Recreate keystore from base64
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > keystore.jks

      - name: Find unsigned APK
        id: findapk
        shell: bash
        run: |
          set -e
          APK_PATH=$(ls -1 app/build/outputs/apk/release/*-unsigned.apk 2>/dev/null || true)
          if [ -z "$APK_PATH" ]; then
            APK_PATH=$(ls -1 app/build/outputs/apk/release/*.apk | head -n1)
          fi
          echo "apk=$APK_PATH" >> $GITHUB_OUTPUT
          echo "Found APK: $APK_PATH"

      - name: Zipalign & Sign APK
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: |
          set -e
          ALIGNED=app-release-aligned.apk
          zipalign -f 4 "${{ steps.findapk.outputs.apk }}" "$ALIGNED"
          apksigner sign \
            --ks keystore.jks \
            --ks-key-alias "$KEY_ALIAS" \
            --ks-pass pass:"$KEYSTORE_PASSWORD" \
            --key-pass pass:"$KEY_PASSWORD" \
            --out app-release-signed.apk \
            "$ALIGNED"
          apksigner verify app-release-signed.apk
          echo "Signed APK ready."

      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed
          path: app-release-signed.apk
