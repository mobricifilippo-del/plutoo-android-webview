name: Android Release APK â€” build & sign (GitHub Actions only)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Questo action installa correttamente SDK + build-tools (niente errori sdkmanager)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: |
            platforms;android-34
            build-tools;34.0.0

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Costruiamo la release (senza firmare con Gradle)
      - name: Assemble release (unsigned)
        run: ./gradlew :app:assembleRelease --stacktrace

      # Ricrea il keystore dai Secret
      - name: Recreate keystore from base64
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > keystore.jks

      # Trova l'APK generato (unsigned o non) in /app/build/outputs/apk/release
      - name: Find unsigned APK
        id: findapk
        shell: bash
        run: |
          set -e
          APK_PATH=$(ls -1 app/build/outputs/apk/release/*-unsigned.apk 2>/dev/null || true)
          if [ -z "$APK_PATH" ]; then
            APK_PATH=$(ls -1 app/build/outputs/apk/release/*.apk | head -n1)
          fi
          echo "apk=$APK_PATH" >> $GITHUB_OUTPUT
          echo "Found APK: $APK_PATH"

      # Allinea e FIRMA l'APK con apksigner
      - name: Zipalign & Sign APK
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: |
          set -e
          echo "Using APK: ${{ steps.findapk.outputs.apk }}"
          ALIGNED=app-release-aligned.apk
          /usr/local/lib/android/sdk/build-tools/34.0.0/zipalign -f 4 "${{ steps.findapk.outputs.apk }}" "$ALIGNED"
          /usr/local/lib/android/sdk/build-tools/34.0.0/apksigner sign \
            --ks keystore.jks \
            --ks-key-alias "$KEY_ALIAS" \
            --ks-pass pass:"$KEYSTORE_PASSWORD" \
            --key-pass pass:"$KEY_PASSWORD" \
            --out app-release-signed.apk \
            "$ALIGNED"
          /usr/local/lib/android/sdk/build-tools/34.0.0/apksigner verify app-release-signed.apk
          echo "Signed APK ready."

      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed
          path: app-release-signed.apk
          if-no-files-found: error
