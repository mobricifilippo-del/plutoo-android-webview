name: Android Release APK from AAB — build, sign & export

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # SDK & Build-Tools per apksigner/zipalign
      - name: Install Android SDK + Build Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget unzip
          mkdir -p $HOME/android-sdk
          cd $HOME/android-sdk
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/ || true
          yes | cmdline-tools/latest/bin/sdkmanager --licenses
          yes | cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34"
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/build-tools/34.0.0" >> $GITHUB_PATH

      # Costruisce l'AAB (robusto, come l'altro workflow che già ti riusciva)
      - name: Build release bundle (AAB) with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.7
          arguments: :app:bundleRelease --stacktrace

      - name: Recreate keystore from base64
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > keystore.jks

      - name: Locate AAB
        id: findeab
        run: |
          set -e
          AAB=$(ls -1 app/build/outputs/bundle/release/*.aab | head -n1)
          echo "aab=$AAB" >> $GITHUB_OUTPUT
          echo "Found AAB: $AAB"

      # Con bundletool generiamo un APK universale già firmato
      - name: Make universal APK from AAB (bundletool)
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: |
          set -e
          BUNDLETOOL_VER=1.17.2
          curl -sL -o bundletool.jar https://github.com/google/bundletool/releases/download/$BUNDLETOOL_VER/bundletool-all-$BUNDLETOOL_VER.jar
          java -jar bundletool.jar build-apks \
            --bundle "${{ steps.findeab.outputs.aab }}" \
            --output app-release.apks \
            --mode=universal \
            --ks keystore.jks \
            --ks-pass pass:"$KEYSTORE_PASSWORD" \
            --ks-key-alias "$KEY_ALIAS" \
            --key-pass pass:"$KEY_PASSWORD"
          unzip -p app-release.apks universal.apk > app-release-universal.apk
          apksigner verify --print-certs app-release-universal.apk
          echo "Universal signed APK ready."

      - name: Upload signed universal APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-universal
          path: app-release-universal.apk
